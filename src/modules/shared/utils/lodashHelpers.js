define(['lodash'], function(_) {
    'use strict';
    return {
        /**
         * Maps all values in array with mapper and reduces the mapped values to a sum with numberExtractor.
         * @param {Array} array The values to map
         * @param {Function|String} mapper A function from an array element to a value object like string, int etc or the name of a property to use.
         * @param {Function|String} numberExtractor A function from an array element to a number or the name of a property of an value that is a number.
         * @return {Object} A map of the keys generated by mapper to sum of extracted numbers from all values belonging to the key.
         */
        mapAndReduceValuesToSum: function(array, mapper, numberExtractor) {
            var _numberExtractor = numberExtractor;
            if(_.isString(numberExtractor)) {
                _numberExtractor = function(val) {
                    return val[numberExtractor];
                };
            }
            return _.mapValues(
                _.groupBy(array, mapper),
                function(values) {
                    return _.reduce(values, function(sum, val) {
                        return sum + _numberExtractor(val);
                    }, 0);
                }
            );
        }
    };
});